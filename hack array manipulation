#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'arrayManipulation' function below.
#
# The function is expected to return a LONG_INTEGER.
# The function accepts following parameters:
#  1. INTEGER n
#  2. 2D_INTEGER_ARRAY queries
#

def arrayManipulation(n, queries):
    # Write your code here
    """Finds the maximum value in an array after multiple range updates.

    Uses a difference array to efficiently track changes.

    Args:
        n (int): Array size.
        queries (list of list): List of [start, end, value] updates.

    Returns:
        int: Maximum value after all updates.
    """

    diff = [0] * (n + 2)  # Difference array (1-indexed with extra cell)

    for start, end, value in queries:
        diff[start] += value  # Increase at start
        diff[end + 1] -= value  # Cancel effect after end

    max_num = 0  # Track maximum value
    curr_sum = 0  # Track current prefix sum
    for i in range(1, n + 1):
        if diff[i] == 0:  # Skip if no change
            continue
        curr_sum += diff[i]  # Update prefix sum
        max_num = max(max_num, curr_sum)  # Update maximum

    return max_num

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    first_multiple_input = input().rstrip().split()

    n = int(first_multiple_input[0])

    m = int(first_multiple_input[1])

    queries = []

    for _ in range(m):
        queries.append(list(map(int, input().rstrip().split())))

    result = arrayManipulation(n, queries)

    fptr.write(str(result) + '\n')

    fptr.close()
